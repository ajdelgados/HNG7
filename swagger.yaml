swagger: "2.0"
info:
  description: "Create new customer (associated to user/store owner), View customers associated to a paticular store"
  version: "1.0.0"
  title: "Customer endpoints"
host: "customerpay.me"
basePath: "/v1"
tags:
- name: "Customer"
  description: "Everything about Customer"
schemes:
- "https"
paths:
  /customer:
    post:
      tags:
      - "Customer"
      summary: "Add a new customer to the store"
      description: ""
      operationId: "addCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Customer object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "405":
          description: "Invalid input"
    put:
      tags:
      - "Customer"
      summary: "Update an existing customer"
      description: ""
      operationId: "updateCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Customer object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Customer not found"
        "405":
          description: "Validation exception"
  /customer/{customerId}:
    get:
      tags:
      - "Customer"
      summary: "Find customer by ID"
      description: "Returns a single customer"
      operationId: "getCustomerById"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Customer not found"
    delete:
      tags:
      - "Customer"
      summary: "Deletes a customer"
      description: ""
      operationId: "deleteCustomer"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "Customer id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Customer not found"
  /customers:
    get:
      tags:
      - "Customer"
      summary: "List of customers"
      description: ""
      operationId: "getCustomers"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
           type: "array"
           items:
            $ref: "#/definitions/Customer"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Customer not found"
definitions:
  Customer:
    type: "object"
    required:
    - "name"
    - "phone"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Mikah"
      phone:
        type: "string"
externalDocs:
  description: "Find out more about customerpay.me"
  url: "https://customerpay.me"